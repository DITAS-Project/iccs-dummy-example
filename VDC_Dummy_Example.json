[  
   {  
      "id":"2e6a58bb.8a7558",
      "type":"cassandra",
      "z":"f3deb72b.32a098",
      "mydb":"841d0647.8ce6e8",
      "name":"query blood tests Cassandra database",
      "x":937.7868881225586,
      "y":351.48265647888184,
      "wires":[  
         [  
            "93360e6a.144e3"
         ]
      ]
   },
   {  
      "id":"f07e2c93.e4df5",
      "type":"function",
      "z":"f3deb72b.32a098",
      "name":"[function]   construct SQL query",
      "func":"var SSN = msg.payload.attributes.SSN;\n\nmsg.topic = \"select * from patient where socialId  = \"+\"\\\"\"+SSN+\"\\\"\";\n\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "x":304.0142059326172,
      "y":93.00567245483398,
      "wires":[  
         [  
            "294a8477.25bd3c"
         ]
      ]
   },
   {  
      "id":"294a8477.25bd3c",
      "type":"mysql",
      "z":"f3deb72b.32a098",
      "mydb":"88b39066.3a5c8",
      "name":"query patient biographical data MySQL database",
      "x":624.0142211914062,
      "y":28.00567626953125,
      "wires":[  
         [  
            "d6e09b.1d2ecf68"
         ]
      ]
   },
   {  
      "id":"d6e09b.1d2ecf68",
      "type":"function",
      "z":"f3deb72b.32a098",
      "name":"[function]   construct exposed data tuple",
      "func":"msg.payload = msg.payload[0];\n\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "x":897.014232635498,
      "y":95.00568771362305,
      "wires":[  
         [  
            "350e6ce6.7355b4"
         ]
      ]
   },
   {  
      "id":"8988d744.651638",
      "type":"link in",
      "z":"f3deb72b.32a098",
      "name":"to patient-details exposed method",
      "links":[  
         "bd9321e4.2ce1b"
      ],
      "x":202.78976249694824,
      "y":23.616456985473633,
      "wires":[  
         [  
            "f07e2c93.e4df5"
         ]
      ]
   },
   {  
      "id":"350e6ce6.7355b4",
      "type":"link out",
      "z":"f3deb72b.32a098",
      "name":"",
      "links":[  
         "a27b57dd.4d52f8"
      ],
      "x":992.784122467041,
      "y":27.738635063171387,
      "wires":[  

      ]
   },
   {  
      "id":"96a95d0c.82806",
      "type":"function",
      "z":"f3deb72b.32a098",
      "name":"[function]   construct SQL query",
      "func":"var SSN = msg.payload.attributes.SSN;\n\nflow.set(\"test\",msg.payload.attributes.blood_test);\n\nmsg.topic = \"select patientId from patient where socialId  = \"+\"\\\"\"+SSN+\"\\\"\";\n\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "x":257.0142059326172,
      "y":425.00557041168213,
      "wires":[  
         [  
            "b7b92089.4de1d"
         ]
      ]
   },
   {  
      "id":"b7b92089.4de1d",
      "type":"mysql",
      "z":"f3deb72b.32a098",
      "mydb":"88b39066.3a5c8",
      "name":"query patient biographical data MySQL database",
      "x":538.0142211914062,
      "y":340.00561904907227,
      "wires":[  
         [  
            "50d5ad60.738374"
         ]
      ]
   },
   {  
      "id":"edea86bd.388a58",
      "type":"link in",
      "z":"f3deb72b.32a098",
      "name":"to test-values exposed method",
      "links":[  
         "69d1b433.b7d63c"
      ],
      "x":195.78972148895264,
      "y":337.61062955856323,
      "wires":[  
         [  
            "96a95d0c.82806"
         ]
      ]
   },
   {  
      "id":"93360e6a.144e3",
      "type":"link out",
      "z":"f3deb72b.32a098",
      "name":"",
      "links":[  
         "a27b57dd.4d52f8"
      ],
      "x":954.7896394729614,
      "y":440.73570442199707,
      "wires":[  

      ]
   },
   {  
      "id":"50d5ad60.738374",
      "type":"function",
      "z":"f3deb72b.32a098",
      "name":"[function]   construct Cassandra query",
      "func":"var id = msg.payload[0].patientId;\n\nvar test = flow.get(\"test\");\n\nmsg.payload = \"\";\n\nmsg.topic = \"SELECT patientid, date, \"+test+\" FROM blood_tests WHERE patientid = \"+id+\" ORDER BY date DESC\";\n\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "x":682.0142364501953,
      "y":440.91457176208496,
      "wires":[  
         [  
            "2e6a58bb.8a7558"
         ]
      ]
   },
   {  
      "id":"cff044cd.b0e2e8",
      "type":"link in",
      "z":"f3deb72b.32a098",
      "name":"to last-values exposed method",
      "links":[  
         "5663e60f.6a2018"
      ],
      "x":200.79258918762207,
      "y":189.42607593536377,
      "wires":[  
         [  
            "e0fbb8ed.bd0dc8"
         ]
      ]
   },
   {  
      "id":"e0fbb8ed.bd0dc8",
      "type":"function",
      "z":"f3deb72b.32a098",
      "name":"[function]   construct SQL query",
      "func":"var SSN = msg.payload.attributes.SSN;\n\nmsg.topic = \"select patientId from patient where socialId  = \"+\"\\\"\"+SSN+\"\\\"\";\n\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "x":240.01419830322266,
      "y":280.0055503845215,
      "wires":[  
         [  
            "972342fa.9c9aa"
         ]
      ]
   },
   {  
      "id":"972342fa.9c9aa",
      "type":"mysql",
      "z":"f3deb72b.32a098",
      "mydb":"88b39066.3a5c8",
      "name":"query patient biographical data MySQL database",
      "x":452.01422119140625,
      "y":169.00570678710938,
      "wires":[  
         [  
            "67c79a4a.6e4434"
         ]
      ]
   },
   {  
      "id":"67c79a4a.6e4434",
      "type":"function",
      "z":"f3deb72b.32a098",
      "name":"[function]   construct Cassandra query",
      "func":"var id = msg.payload[0].patientId;\n\nmsg.payload = \"\";\n\nmsg.topic = \"SELECT * FROM blood_tests WHERE patientid = \"+id+\" order by date desc limit 1\";\n\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "x":658.0141983032227,
      "y":269.0056047439575,
      "wires":[  
         [  
            "ed306bc8.fbf8f8"
         ]
      ]
   },
   {  
      "id":"ed306bc8.fbf8f8",
      "type":"cassandra",
      "z":"f3deb72b.32a098",
      "mydb":"841d0647.8ce6e8",
      "name":"query blood tests Cassandra database",
      "x":849.0141143798828,
      "y":155.91472053527832,
      "wires":[  
         [  
            "c4abc1ca.7de4f"
         ]
      ]
   },
   {  
      "id":"62ca95ea.2e789c",
      "type":"link out",
      "z":"f3deb72b.32a098",
      "name":"",
      "links":[  
         "a27b57dd.4d52f8"
      ],
      "x":1025.7867527008057,
      "y":314.46583557128906,
      "wires":[  

      ]
   },
   {  
      "id":"d5f74c4e.59b55",
      "type":"link in",
      "z":"f3deb72b.32a098",
      "name":"to test-average exposed method",
      "links":[  
         "a0609f0c.4f7bb"
      ],
      "x":198.79255294799805,
      "y":508.8806095123291,
      "wires":[  
         [  
            "41b10042.c8593"
         ]
      ]
   },
   {  
      "id":"41b10042.c8593",
      "type":"function",
      "z":"f3deb72b.32a098",
      "name":"[function]   construct SQL query",
      "func":"var year = (new Date()).getFullYear();\n\nvar low = (year - msg.payload.attributes.upper_age + 1).toString()+\"-01-01\";\n\nvar high = (year - msg.payload.attributes.lower_age - 1).toString()+\"-01-01\";\n\nflow.set(\"test\",msg.payload.attributes.blood_test);\n\nflow.set(\"subtest\",msg.payload.attributes.sub_blood_test);\n\nmsg.topic = \"select patientId from patient where birthDate < \"+\"\\\"\"+high+\"\\\"\"+\" and birthDate > \"+\"\\\"\"+low+\"\\\"\";\n\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "x":320.01424407958984,
      "y":613.6416759490967,
      "wires":[  
         [  
            "e63e742e.548188"
         ]
      ]
   },
   {  
      "id":"e63e742e.548188",
      "type":"mysql",
      "z":"f3deb72b.32a098",
      "mydb":"88b39066.3a5c8",
      "name":"query patient biographical data MySQL database",
      "x":532.0142211914062,
      "y":500.64194679260254,
      "wires":[  
         [  
            "df0fa580.8d2278"
         ]
      ]
   },
   {  
      "id":"68c5b13f.ef12",
      "type":"link out",
      "z":"f3deb72b.32a098",
      "name":"",
      "links":[  
         "a27b57dd.4d52f8"
      ],
      "x":962.7868957519531,
      "y":618.2838315963745,
      "wires":[  

      ]
   },
   {  
      "id":"df0fa580.8d2278",
      "type":"function",
      "z":"f3deb72b.32a098",
      "name":"[function]   construct Cassandra query",
      "func":"var test = flow.get(\"test\");\n\nvar ids = [];\n\nfor (i=0; i<msg.payload.length; i++) {\n    \n    ids.push(msg.payload[i].patientId);\n    \n}\n\nmsg.payload = \"\";\n\nvar condition = \"IN (\"+ids[0];\n\nfor (k=1; k<ids.length; k++) {\n    \n    condition = condition+\", \"+ids[k];\n    \n}\n\ncondition = condition+\")\";\n\nmsg.topic = \"SELECT patientid, \"+test+\" FROM blood_tests WHERE patientid \"+condition;\n\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "x":672.0142059326172,
      "y":610.5510654449463,
      "wires":[  
         [  
            "6a5f326a.a4a71c"
         ]
      ]
   },
   {  
      "id":"6a5f326a.a4a71c",
      "type":"cassandra",
      "z":"f3deb72b.32a098",
      "mydb":"841d0647.8ce6e8",
      "name":"query blood tests Cassandra database",
      "x":946.0141525268555,
      "y":502.55109214782715,
      "wires":[  
         [  
            "fe8d0dfe.7cffb"
         ]
      ]
   },
   {  
      "id":"fe8d0dfe.7cffb",
      "type":"function",
      "z":"f3deb72b.32a098",
      "name":"[function]   construct exposed data tuple",
      "func":"var test = flow.get(\"test\");\n\nvar subtest = flow.get(\"subtest\");\n\n\nif (subtest == null) {\n\nvar unit = msg.payload[0][test].unit;\n\n\nvar value = msg.payload[0][test].value;\n\nvar float = false;\n\nif (value % 1 !== 0) {\n    \n    float = true;\n    \n}\n\nif (float) {\n\nvar sum = 0.0;\n\nfor (i=0; i<msg.payload.length; i++) {\n\n    sum = sum + parseFloat(msg.payload[i][test].value);\n    \n}\n\n    var avg = parseFloat(sum/msg.payload.length);\n    \n}\n\nelse {\n    \nvar sum = 0;\n\nfor (i=0; i<msg.payload.length; i++) {\n\n    sum = sum + parseInt(msg.payload[i][test].value);\n    \n}\n\n    var avg = parseInt(sum/msg.payload.length);\n    \n}\n\n\nmsg.payload = {};\n\nmsg.payload.blood_test = test;\nmsg.payload.unit = unit;\nmsg.payload.average = avg;\n\n}\n\nelse {\n\nvar unit = msg.payload[0][test][subtest].unit;\n\nvar value = msg.payload[0][test][subtest].value;\n\nvar float = false;\n\nif (value % 1 !== 0) {\n    \n    float = true;\n    \n}\n\nif (float) {\n\nvar sum = 0.0;\n\nfor (i=0; i<msg.payload.length; i++) {\n\n    sum = sum + parseFloat(msg.payload[i][test][subtest].value);\n    \n}\n\n    var avg = parseFloat(sum/msg.payload.length);\n    \n}\n\nelse {\n    \nvar sum = 0;\n\nfor (i=0; i<msg.payload.length; i++) {\n\n    sum = sum + parseInt(msg.payload[i][test][subtest].value);\n    \n}\n\n    var avg = parseInt(sum/msg.payload.length);\n    \n}\n\n\nmsg.payload = {};\n\nmsg.payload.blood_test = test;\nmsg.payload.sub_blood_test = subtest;\nmsg.payload.unit = unit;\nmsg.payload.average = avg;\n\n    \n}\n\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "x":883.0141525268555,
      "y":697.3690319061279,
      "wires":[  
         [  
            "68c5b13f.ef12"
         ]
      ]
   },
   {  
      "id":"c4abc1ca.7de4f",
      "type":"function",
      "z":"f3deb72b.32a098",
      "name":"[function]   construct exposed data tuple",
      "func":"msg.payload = msg.payload[0];\n\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "x":1037.0142517089844,
      "y":229.00567245483398,
      "wires":[  
         [  
            "62ca95ea.2e789c"
         ]
      ]
   },
   {  
      "id":"841d0647.8ce6e8",
      "type":"CassandraDatabase",
      "z":"",
      "hosts":"",
      "port":"9042",
      "keyspace":"ditas"
   },
   {  
      "id":"88b39066.3a5c8",
      "type":"MySQLdatabase",
      "z":"",
      "host":"",
      "port":"3306",
      "db":"ditas_dummy_example",
      "tz":""
   }
]